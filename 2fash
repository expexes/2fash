#!/usr/bin/env bash

FASH_COMMAND="2fash"

[[ -z "$FASH_DIRECTORY" ]] && FASH_DIRECTORY="$HOME/.2fash"
[[ -z "$FASH_DIRECTORY_BIN" ]] && FASH_DIRECTORY_BIN="$FASH_DIRECTORY/bin"
[[ -z "$FASH_DIRECTORY_ACCOUNTS" ]] && FASH_DIRECTORY_ACCOUNTS="$FASH_DIRECTORY/accounts"

#[[ -z "$FASH_DIRECTORY" ]] && FASH_DIRECTORY="$HOME/.2fash"
#[[ -z "$FASH_DIRECTORY_BIN" ]] && FASH_DIRECTORY_BIN="."
#[[ -z "$FASH_DIRECTORY_ACCOUNTS" ]] && FASH_DIRECTORY_ACCOUNTS="$FASH_DIRECTORY/accounts"


# --- FORMAT ---
FORMAT_DEFAULT="\e[39m"
FORMAT_NORM="\e[0m"
FORMAT_BOLD="\e[1m"
FORMAT_DIM="\e[2m"
FORMAT_UNDERLINE="\e[4m"
FORMAT_BLINK="\e[5m"
FORMAT_INV="\e[7m"

FORMAT_RED="\e[31m"
FORMAT_LRED="\e[91m"

FORMAT_GREEN="\e[32m"
FORMAT_LGREEN="\e[92m"

FORMAT_GREEN="\e[32m"
FORMAT_LGREEN="\e[92m"

FORMAT_BLACK="\e[30m"
FORMAT_WHITE="\e[97m"
FORMAT_LGRAY="\e[37m"
FORMAT_DGRAY="\e[90m"

FORMAT_YELLOW="\e[33m"
FORMAT_LYELLOW="\e[93m"

FORMAT_BLUE="\e[34m"
FORMAT_LBLUE="\e[94m"

FORMAT_MAGENTA="\e[35m"
FORMAT_LMAGENTA="\e[95m"

FORMAT_CYAN="\e[36m"
FORMAT_LCYAN="\e[96m"

__2fash_echo_error() {
	echo -e "\n ${FORMAT_NORM}${FORMAT_RED}${FORMAT_BOLD}Error: ${FORMAT_NORM}${1}\n"
}

__2fash_print_header() {
	echo ""
	echo -e "\t ____  _____ _    ____  _   _ "
	echo -e "\t|___ \|  ___/ _  / ___|| | | |"
	echo -e "\t  __) | |_ / _ _ \___ \| |_| |"
	echo -e "\t / __/|  _/ ___ _ ___) |  _  |"
	echo -e "\t|_____|_|/_/   \ _ ___/|_| |_|"
	echo ""
	echo ""
}

__2fash_read_text_label_bold() {
	echo -en " ${FORMAT_NORM}${1}: ${2}"
}

__2fash_read_text_label() {
	echo -en " ${FORMAT_NORM}${1}: ${2}${FORMAT_NORM}"
}

__2fash_print_help_usage_head() {
	echo -e " ${FORMAT_BOLD}USAGE:${FORMAT_NORM} $@"
}

__2fash_print_help_head() {
	echo -e " ${FORMAT_BOLD}$@:${FORMAT_NORM}"
}

__2fash_print_help_command() {
	echo -e "\t$1 \t- $2"
}
# --- END FORMAT ---



# --- TOOLS ---
__2fash_check_dependencies() {
	to_install_arch=()
	to_install_fedora=()
	to_install_ubuntu=()

	install_deps=0

	! [[ -x "$(command -v oathtool)" ]] && install_deps=1 && to_install_arch+=('oath-toolkit') && to_install_fedora+=('oathtool') && to_install_ubuntu+=('oathtool')
	! [[ -x "$(command -v gpg)" ]] && install_deps=1 && to_install_arch+=('gpg gnupg') && to_install_fedora+=('gnupg2') && to_install_ubuntu+=('gpg gpgv2')

	if [[ "$install_deps" == "1" ]]; then
		__2fash_echo_error "install dependencies"
		echo -e " Arch\t${FORMAT_BOLD}sudo pacman -S ${to_install_arch[@]}${FORMAT_NORM}"
		echo -e " Fedora\t${FORMAT_BOLD}sudo dnf install ${to_install_fedora[@]}${FORMAT_NORM}"
		echo -e " Ubuntu\t${FORMAT_BOLD}sudo apt install ${to_install_ubuntu[@]}${FORMAT_NORM}"
		echo ""
		exit 2
	fi
}

__2fash_is_account_exists() {
	[[ -d "$FASH_DIRECTORY_ACCOUNTS/$1" ]] && echo 1 || echo 0
}

__2fash_is_account_encrypted() {
	[[ -f "$FASH_DIRECTORY_ACCOUNTS/$1/.gpgdata" ]] && echo 1 || echo 0
}
# --- END TOOLS ---

# --- ERRORS ---
__2fash_throw_error_if_account_doesnt_exist() {
	[[ $(__2fash_is_account_exists "$1") == "0" ]] && __2fash_echo_error "account doesn't exist" && exit 10
}

__2fash_throw_error_if_account_exists() {
	[[ $(__2fash_is_account_exists "$1") == "1" ]] && __2fash_echo_error "account already exist" && exit 11
}

__2fash_throw_error_if_account_secret_doesnt_exist() {
	! [[ -f "$FASH_DIRECTORY_ACCOUNTS/$1/.secret" ]] && __2fash_echo_error "secret file doesn't exist" && exit 12
}
# --- END ERRORS ---


__2fash_print_help() {
	__2fash_print_help_usage_head "${FASH_COMMAND} [COMMAND] ${FORMAT_LYELLOW}?${FORMAT_NORM}[ACCOUNT] [OPTION]..."
	echo ""
	__2fash_print_help_head "COMMANDS"
	__2fash_print_help_command "help,\th" "show help"
	__2fash_print_help_command "add,\ta" "add new account"
	__2fash_print_help_command "code,\tc" "get 2fa code for the account"
	__2fash_print_help_command "list,\tls" "print list of account"
	__2fash_print_help_command "remove,\trm" "remove an account"
	__2fash_print_help_command "export,\tex" "export accounts to a file"
#	__2fash_print_help_command "import,\tim" "import accounts from a file"
	echo ""
	__2fash_print_help_command "version" "show 2fash version"
	__2fash_print_help_command "update\t" "update 2fash"
	__2fash_print_help_command "uninstall" "uninstall 2fash"
}


# --- START LOGIC ---

__2fash_check_dependencies

case $1 in
	[hH] | [hH][eE][lL][pP])
		__2fash_print_header
		__2fash_print_help
		echo ""
		shift
	;;
	[iI] | [iI][nN][iI][tT])
		__2fash_echo_error "Please use ${FORMAT_BOLD}2fash add${FORMAT_NORM} instead."
		exit 1
	;;
	[aA] | [aA][dD][dD])
		source "$FASH_DIRECTORY_BIN/2fash_add.sh" -d="$FASH_DIRECTORY_ACCOUNTS" "$@"
		shift
	;;
	[cC] | [cC][oO][dD][eE])
		source "$FASH_DIRECTORY_BIN/2fash_code.sh" -a="$2" "$@"
		shift
	;;
	[lL][sS] | [lL][iI][sS][tT])
		source "$FASH_DIRECTORY_BIN/2fash_list.sh" "$@"
		shift
	;;
	[rR][mM] | [rR][eE][mM][oO][vV][eE])
		source "$FASH_DIRECTORY_BIN/2fash_remove.sh" -a="$2" "$@"
		shift
	;;
	[eE][xX] | [eE][xX][pP][oO][rR][tT])
		source "$FASH_DIRECTORY_BIN/2fash_export.sh" "$@"
		shift
	;;
	[iI][mM] | [iI][mM][pP][oO][rR][tT])
		source "$FASH_DIRECTORY_BIN/2fash_import.sh" "$@"
		shift
	;;
	[uU][nN][iI][nN][sS][tT][aA][lL][lL])
		source "$FASH_DIRECTORY_BIN/2fash_uninstall.sh" "$@"
		shift
	;;
	[uU][pP][dD][aA][tT][eE])
		source "$FASH_DIRECTORY_BIN/2fash_update.sh"
		shift
	;;
	[vV][eE][rR][sS][iI][oO][nN])
		__2fash_version=`cat ${FASH_DIRECTORY_BIN}/VERSION`
		echo "2fash, version ${__2fash_version}"
		shift
	;;
	*)
		__2fash_print_header
		__2fash_print_help
		echo ""
		exit 1
	;;
esac
